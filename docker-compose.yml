version: '3.4'

services:
  myrecipebook.api:
    image: myrecipebook.api #${DOCKER_REGISTRY-}myrecipebookapi
    container_name: myrecipebook.api
    build:
      context: .
      # dockerfile: Dockerfile
      dockerfile: src/Backend/MyRecipeBook.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      - ASPNETCORE_HTTPS_PORTS=5001
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ~/.aspnet/https:/https:ro
    depends_on:
      # rabbitmq:
      #   condition: service_healthy
      sqlserver:
        condition: service_healthy

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "password123!"
      ACCEPT_EULA: "Y"
    volumes:
      - ./sqlserver/data:/var/opt/mssql/data
      - ./sqlserver/log:/var/opt/mssql/log
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "password123!" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-myrecipebook
    hostname: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"
    # volumes:
    #   - ./.containers/queue/data/:/var/lib/rabbitmq
    #   - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:15672"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5